$date
  Thu Nov 21 02:00:50 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module processor_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 8 # instr_addr[7:0] $end
$var reg 32 $ instr[31:0] $end
$var reg 8 % data_addr[7:0] $end
$var reg 8 & data_in[7:0] $end
$var reg 8 ' data_out[7:0] $end
$var reg 1 ( data_wr $end
$scope module uut $end
$var reg 1 ) clk $end
$var reg 1 * reset $end
$var reg 8 + instr_addr[7:0] $end
$var reg 32 , instr[31:0] $end
$var reg 8 - data_addr[7:0] $end
$var reg 8 . data_in[7:0] $end
$var reg 8 / data_out[7:0] $end
$var reg 1 0 data_wr $end
$var reg 8 1 pc[7:0] $end
$var reg 32 2 inst_reg[31:0] $end
$var reg 8 3 reg_a[7:0] $end
$var reg 8 4 reg_b[7:0] $end
$var reg 8 5 alu_res[7:0] $end
$var reg 3 6 alu_ctrl[2:0] $end
$var reg 1 7 zero_flag $end
$scope module alu_unit $end
$var reg 8 8 a[7:0] $end
$var reg 8 9 b[7:0] $end
$var reg 3 : sel[2:0] $end
$var reg 8 ; result[7:0] $end
$var reg 1 < zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
1"
b00000000 #
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $
b00000000 %
bUUUUUUUU &
b00000000 '
0(
0)
1*
b00000000 +
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ,
b00000000 -
bUUUUUUUU .
b00000000 /
00
b00000000 1
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 2
bUUUUUUUU 3
bUUUUUUUU 4
b00000000 5
b111 6
17
bUUUUUUUU 8
bUUUUUUUU 9
b111 :
b00000000 ;
1<
#5000000
1!
1)
#10000000
0!
0)
#15000000
1!
1)
#20000000
0!
0"
0)
0*
#25000000
1!
b00000001 #
1)
b00000001 +
b00000001 1
#30000000
0!
b00000000111111110000000100000000 $
b00000001 &
1(
0)
b00000000111111110000000100000000 ,
b00000001 .
10
b00000000111111110000000100000000 2
b11111111 3
b00000001 4
b000 6
b11111111 8
b00000001 9
b000 :
#35000000
1!
b00000010 #
1)
b00000010 +
b00000010 1
#40000000
0!
b00100000111111110000000100000000 $
b11111110 %
0(
0)
b00100000111111110000000100000000 ,
b11111110 -
00
b00100000111111110000000100000000 2
b11111110 5
b001 6
07
b001 :
b11111110 ;
0<
#45000000
1!
b00000011 #
1)
b00000011 +
b00000011 1
#50000000
0!
b01000000111111110000111100000000 $
b00001111 %
b00001111 &
0)
b01000000111111110000111100000000 ,
b00001111 -
b00001111 .
b01000000111111110000111100000000 2
b00001111 4
b00001111 5
b010 6
b00001111 9
b010 :
b00001111 ;
#55000000
1!
b00000100 #
1)
b00000100 +
b00000100 1
#60000000
0!
b01100000111100000000111100000000 $
b11111111 %
0)
b01100000111100000000111100000000 ,
b11111111 -
b01100000111100000000111100000000 2
b11110000 3
b11111111 5
b011 6
b11110000 8
b011 :
b11111111 ;
#65000000
1!
b00000101 #
1)
b00000101 +
b00000101 1
#70000000
0!
b10000000111111110101010100000000 $
b10101010 %
b01010101 &
0)
b10000000111111110101010100000000 ,
b10101010 -
b01010101 .
b10000000111111110101010100000000 2
b11111111 3
b01010101 4
b10101010 5
b100 6
b11111111 8
b01010101 9
b100 :
b10101010 ;
#75000000
1!
b00000110 #
1)
b00000110 +
b00000110 1
#80000000
0!
b10100000111111110000000000000000 $
b00000000 %
b00000000 &
0)
b10100000111111110000000000000000 ,
b00000000 -
b00000000 .
b10100000111111110000000000000000 2
b00000000 4
b00000000 5
b101 6
17
b00000000 9
b101 :
b00000000 ;
1<
#85000000
1!
b00000111 #
1)
b00000111 +
b00000111 1
#90000000
0!
0)
#95000000
1!
b00001000 #
1)
b00001000 +
b00001000 1
#100000000
0!
0)
#105000000
1!
b00001001 #
1)
b00001001 +
b00001001 1
#110000000
0!
0)
#115000000
1!
b00001010 #
1)
b00001010 +
b00001010 1
#120000000
0!
0)
#125000000
1!
b00001011 #
1)
b00001011 +
b00001011 1
#130000000
0!
1"
b00000000 #
0)
1*
b00000000 +
b00000000 1
#135000000
1!
1)
#140000000
0!
0)
#145000000
1!
1)
#150000000
0!
0"
0)
0*
#155000000
1!
b00000001 #
1)
b00000001 +
b00000001 1
#160000000
0!
0)
#165000000
1!
b00000010 #
1)
b00000010 +
b00000010 1
#170000000
0!
0)
#175000000
1!
b00000011 #
1)
b00000011 +
b00000011 1
#180000000
0!
0)
#185000000
1!
b00000100 #
1)
b00000100 +
b00000100 1
#190000000
0!
0)
#195000000
1!
b00000101 #
1)
b00000101 +
b00000101 1
#200000000
0!
0)
